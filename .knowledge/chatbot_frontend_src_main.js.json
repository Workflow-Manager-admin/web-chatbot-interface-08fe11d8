{"is_source_file": true, "format": "JavaScript", "description": "Main frontend source file for a web-based chatbot interface. Includes UI rendering functions, event handling, and demo message data.", "external_files": ["./style.css"], "external_methods": [], "published": [], "classes": [], "methods": [{"name": "formatTime(date = new Date())", "description": "Formats a Date object into a string with 12-hour time and AM/PM.", "scope": "", "scopeKind": ""}, {"name": "renderHeader()", "description": "Renders the chatbot header section with avatar, title, and clear button.", "scope": "", "scopeKind": ""}, {"name": "renderTabs()", "description": "Renders the tab navigation between 'Chat' and 'Browse FAQs'.", "scope": "", "scopeKind": ""}, {"name": "renderMessagesArea()", "description": "Renders the message display area, either chat messages or FAQ list based on active tab.", "scope": "", "scopeKind": ""}, {"name": "renderMessageBubble(msg)", "description": "Creates HTML for individual message bubbles for bot or user messages.", "scope": "", "scopeKind": ""}, {"name": "renderComposer()", "description": "Renders the message input composer with attach, send buttons, and input field.", "scope": "", "scopeKind": ""}, {"name": "renderChatbotUI()", "description": "Assembles the full chatbot interface UI.", "scope": "", "scopeKind": ""}, {"name": "addEventListeners()", "description": "Adds event handlers for tab switching, message sending, clearing chat, and accessibility controls.", "scope": "", "scopeKind": ""}, {"name": "tabSwitchHandler()", "description": "Handles switching between chat and FAQ tabs.", "scope": "", "scopeKind": ""}, {"name": "rerenderMainArea(full = false)", "description": "Re-renders the main chat area, used after switching tabs or clearing messages.", "scope": "", "scopeKind": ""}, {"name": "sendMessageHandler()", "description": "Handles user sending a message, appends user message, and simulates bot reply.", "scope": "", "scopeKind": ""}, {"name": "setSendButtonState()", "description": "Enables/disables the send button based on input field content.", "scope": "", "scopeKind": ""}, {"name": "focusInput()", "description": "Focuses the message input field.", "scope": "", "scopeKind": ""}, {"name": "scrollMessagesToBottom()", "description": "Scrolls the messages container to the bottom to show latest messages.", "scope": "", "scopeKind": ""}, {"name": "onkeydown(event)", "scope": "attachBtn", "scopeKind": "function", "description": "unavailable"}], "calls": ["renderHeader()", "renderTabs()", "renderMessagesArea()", "renderMessageBubble()", "renderComposer()", "formatTime()", "addEventListeners()", "scrollMessagesToBottom()"], "search-terms": ["chatbot UI", "main.js", "message rendering", "event handling", "tab switching", "demo messages", "frontend interface"], "state": 2, "file_id": 5, "knowledge_revision": 24, "git_revision": "579fdabe72b9ce67006efa62845f478a704c7e74", "revision_history": [{"16": "60db58764849f835f14bd085d153c341c40136b1"}, {"18": "60db58764849f835f14bd085d153c341c40136b1"}, {"21": "60db58764849f835f14bd085d153c341c40136b1"}, {"22": "60db58764849f835f14bd085d153c341c40136b1"}, {"23": "579fdabe72b9ce67006efa62845f478a704c7e74"}, {"24": "579fdabe72b9ce67006efa62845f478a704c7e74"}], "ctags": [{"_type": "tag", "name": "AnonymousFunctionbda1c15d0100", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^    el.onfocus = function() { this.classList.add('focus'); };$/", "language": "JavaScript", "kind": "class", "signature": "()"}, {"_type": "tag", "name": "AnonymousFunctionbda1c15d0200", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^    el.onblur = function() { this.classList.remove('focus'); };$/", "language": "JavaScript", "kind": "class", "signature": "()"}, {"_type": "tag", "name": "activeTab", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^let activeTab = 0;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "addEventListeners", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^function addEventListeners() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "focusInput", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^function focusInput() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "formatTime", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^function formatTime(date = new Date()) {$/", "language": "JavaScript", "kind": "function", "signature": "(date = new Date())"}, {"_type": "tag", "name": "messages", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^let messages = [$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "onkeydown", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^    attachBtn.onkeydown = function(event) {$/", "language": "JavaScript", "kind": "function", "signature": "(event)", "scope": "attachBtn", "scopeKind": "function"}, {"_type": "tag", "name": "paperclipSVG", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^const paperclipSVG = `<svg viewBox=\"0 0 20 20\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M5 11/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "renderChatbotUI", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^function renderChatbotUI() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "renderComposer", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^function renderComposer() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "renderHeader", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^function renderHeader() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "renderMessageBubble", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^function renderMessageBubble(msg) {$/", "language": "JavaScript", "kind": "function", "signature": "(msg)"}, {"_type": "tag", "name": "renderMessagesArea", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^function renderMessagesArea() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "renderTabs", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^function renderTabs() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "rerenderMainArea", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^function rerenderMainArea(full = false) {$/", "language": "JavaScript", "kind": "function", "signature": "(full = false)"}, {"_type": "tag", "name": "robotSVG", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^const robotSVG = `<svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\"><circle cx=\"18\" cy/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "scrollMessagesToBottom", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^function scrollMessagesToBottom() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "sendMessageHandler", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^function sendMessageHandler() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "sendSVG", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^const sendSVG = `<svg viewBox=\"0 0 24 24\" width=\"22\" height=\"22\" fill=\"none\" stroke=\"#fff\" strok/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "setSendButtonState", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^function setSendButtonState() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "tabNames", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^const tabNames = [\"Chat\", \"Browse FAQs\"];$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "tabSwitchHandler", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^function tabSwitchHandler() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "userSVG", "path": "/home/kavia/workspace/code-generation/web-chatbot-interface-08fe11d8/chatbot_frontend/src/main.js", "pattern": "/^const userSVG = `<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><circle cx=\"16\" cy=\"16\" r=\"16\" /", "language": "JavaScript", "kind": "constant"}], "hash": "e5118b7a4d84a461bc6ae73e5fad6459", "format-version": 4, "code-base-name": "chatbot_frontend", "filename": "chatbot_frontend/src/main.js", "fields": [{"name": "let activeTab = 0;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let messages = [", "scope": "", "scopeKind": "", "description": "unavailable"}]}